name: Publish Binaries

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build-py:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          check-latest: true

      - name: Install dependencies
        run: |
          pip install -r ./python/src/requirements.txt
          pip install pyinstaller

      - name: Build Feynman
        run: |
          cd ./python/src
          pyinstaller --onefile --clean --name feynman-py-${{ github.ref_name }}-${{ runner.os }}-${{ runner.arch }} main.py

      - name: Upload Artifact (Linux)
        uses: actions/upload-artifact@v3
        if: runner.os == 'Linux'
        with:
          retention-days: 1
          name: feynman-py-${{ github.ref_name }}-${{ runner.os }}-${{ runner.arch }}
          path: ${{ github.workspace }}/python/src/dist/feynman-py-${{ github.ref_name }}-${{ runner.os }}-${{ runner.arch }}

      - name: Upload Artifact (Windows)
        uses: actions/upload-artifact@v3
        if: runner.os == 'Windows'
        with:
          retention-days: 1
          name: feynman-py-${{ github.ref_name }}-${{ runner.os }}-${{ runner.arch }}
          path: ${{ github.workspace }}\python\src\dist\feynman-py-${{ github.ref_name }}-${{ runner.os }}-${{ runner.arch }}

  build-go:
    strategy:
      matrix:
        GOOS: [linux, darwin, windows]
        GOARCH: [amd64]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version-file: "./golang/src/go.mod"
          check-latest: true

      - name: Build Feynman
        env:
          GOOS: ${{ matrix.GOOS }}
          GOARCH: ${{ matrix.GOARCH }}
        run: |
          cd ./golang/src
          go build -o feynman-go-${{ github.ref_name }}-${{ matrix.GOOS }}-${{ matrix.GOARCH }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          retention-days: 1
          name: feynman-go-${{ github.ref_name }}-${{ matrix.GOOS }}-${{ matrix.GOARCH }}
          path: ${{ github.workspace }}/golang/src/feynman-go-${{ github.ref_name }}-${{ matrix.GOOS }}-${{ matrix.GOARCH }}

  release:
    runs-on: ubuntu-latest
    needs:
      - build-go
      - build-py
    steps:
      - name: Download packages
        uses: actions/download-artifact@v3
        with:
          path: ${{ github.workspace }}/binaries

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          fail_on_unmatched_files: true
          token: ${{ secrets.RELEASE_TOKEN }}
          body: "Feynman ${{ github.ref_name }}"
          files: ${{ github.workspace }}/binaries/**/feynman*
