name: Build & Publish Binaries

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build-go:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        GOOS: [linux, darwin, windows]
        GOARCH: [amd64]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version-file: "./golang/src/go.mod"
          check-latest: true

      - name: Build Binary name
        run: |
          BINARY_NAME=feynman-go-${{ github.ref_name }}-${{ matrix.GOOS }}-${{ matrix.GOARCH }}
          echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_ENV

      - name: Build Feynman
        env:
          GOOS: ${{ matrix.GOOS }}
          GOARCH: ${{ matrix.GOARCH }}
        run: |
          cd ./golang/src
          go build -o $BINARY_NAME
          ls -larth

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          retention-days: 5
          name: feynman-go-${{ github.ref_name }}-${{ matrix.GOOS }}-${{ matrix.GOARCH }}
          path: ${{ github.workspace }}/golang/src/feynman-go-${{ github.ref_name }}-${{ matrix.GOOS }}-${{ matrix.GOARCH }}

  release:
    runs-on: ubuntu-latest
    needs:
      - build-go
    steps:
      - name: Download packages
        uses: actions/download-artifact@v3
        with:
          path: ${{ github.workspace }}/binaries

      - name: test
        run: |
          ls -larth ${{ github.workspace }}/binaries
          tree ${{ github.workspace }}/binaries

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          fail_on_unmatched_files: true
          token: ${{ secrets.RELEASE_TOKEN }}
          body: ${{ github.ref_name }}
          files: ${{ github.workspace }}/binaries/*
